#+title: Semantics and Functional Programming
#+subtitle: HHU spring/summer semester 2024 edition
#+bibliography: ../bibliography/master.bib
#+cite_export: csl
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://gongzhitaao.org/orgcss/org.css"/>
#+OPTIONS: toc:nil
#+EXPORT_FILE_NAME: ./docs/index.html
#+author: Patrick D. Elliott

#+CAPTION: Fernsehturm, Berlin 1968 (Horst Sturm)
#+ATTR_HTML: :width 250 :style border:2px solid black;
[[./fernsehturm.jpg]]

Last updated: "[2024-04-09 12:27]" 

[[./syllabus.pdf][Syllabus]]

* Course description

#+begin_quote
This course is intended primarily as a first introduction to functional programming, aimed at students with an existing background in logic and/or linguistics. The programming language we'll be using in this course is Haskell - a statically-typed, purely functional language. Although not as common as languages such as python, Haskell is a general-purpose programming language with industrial applications.

For our purposes, Haskell is especially compelling since its design is inspired by mathematical tools commonly deployed in linguistic theory, such as the lambda calculus, type theory, and category theory. The main topic of this course is "computational semantics", but from a symbolic/algorithmic, rather than a data-driven perspective. Over the course of the semester, we'll gradually build up a working knowledge of Haskell by implementing logical constructs used in linguistics, such as Context Free Grammars and Montagovian fragments as *programs*.

This will be an extremely hands-on course, and students should ideally expect to bring a laptop to class. We'll set up a Haskell development environment together, and homework exercises will involve concrete programming tasks. 
#+end_quote

* Haskell resources

- Run haskell programs in your browser using the [[https://play.haskell.org/][haskell playground]]. 
- Setting up a haskell environment: [[https://www.haskell.org/get-started/][Get Started]] 
- The [[https://haskellbook.com/][Haskell from first principles]] textbook [cite:@AllenMoronuki2020].

* Tentative Schedule

Class takes place *Tuesday 16:30-18:00* in *2321.U1.72 (Z 34)*.

| date              | class                   |
|-------------------+-------------------------|
| April 9           | [[Lambda calculus]]     |
| April 16          | Intro to Haskell        |
| April 23          | Strings                 |
| April 25          | Basic datatypes         |
| April 30 (remote) | Types and typeclasses   |
| May 7             | Fragments i: syntax     |
| May 14            | Fragments ii: semantics |
| May 21            | Model checking          |
| May 28            | Meaning composition     |
| June 4            | Functors                |
| June 11           | Applicatives            |
| June 18           | NO CLASS                |
| June 25           | Monads                  |
| July 2            | Monads cont.            |
| July 9            | Student presentations   |
| July 16           | Student presentations   |

* Lambda calculus

- [[./lambda.pdf][Slides]].
  * [[./lambda.html][Html version]].

* References
  
#+print_bibliography:

* File local variables                                             :noexport:

# Local Variables:
# time-stamp-line-limit: 1000
# time-stamp-format: "[%Y-%m-%d %H:%M]"
# time-stamp-active: t
# time-stamp-start: "Last updated: \""
# time-stamp-end: "\""
# eval: (add-hook 'before-save-hook (lambda () (if (y-or-n-p "update timestamp?") (time-stamp))) nil t)
# eval: (add-hook 'after-save-hook (lambda nil (if (y-or-n-p "export to html?") (org-html-export-to-html))) nil t)
# End:
